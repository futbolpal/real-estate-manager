package reman.client.gui.forms;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Timestamp;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.UIManager;

import reman.client.basetypes.Agent;
import reman.client.basetypes.Gender;
import reman.client.basetypes.License;
import reman.client.basetypes.MLSInfo;
import reman.client.basetypes.TimeRange;
import reman.client.gui.DateField;
import reman.common.database.DatabaseObject;


/**
 * This class provides a panel to manipulate Agents
 * @author jonathan
 *
 */
public class AgentFormPanel extends DboFormPanel<Agent> {
	private JTextField title_;
	private JTextField first_;
	private JTextField middle_;
	private JTextField last_;
	private DateField dob_;
	private JComboBox gender_;
	private DboFormPanel<TimeRange> active_;
	private DboFormPanel<License> license_;
	private DboFormPanel<MLSInfo> mls_;
	private JButton manage_partners_;
	private JButton manage_liable_properties_;
	private JButton manage_fees_;

	public AgentFormPanel(String name, Agent a, DboFormPanel<? extends DatabaseObject> parent,
			boolean read_only) throws Exception {
		super(name, a, parent, read_only);
		this.addFormItem("Title", title_ = new JTextField(20));
		this.addFormItem("First", first_ = new JTextField(20));
		this.addFormItem("Middle", middle_ = new JTextField(20));
		this.addFormItem("Last", last_ = new JTextField(20));

		this.addFormItem("DOB", dob_ = new DateField());

		this.addFormItem("Gender", gender_ = new JComboBox(Gender.values()));
		this.addFormItem(active_ = a.getActiveTime().getFormPanel("Active Time", this, read_only));
		this.addFormItem(license_ = a.getLicense().getFormPanel("License Info", this, read_only));
		this.addFormItem(mls_ = a.getMLSInfo().getFormPanel("MLS Info", this, read_only));
		this.addFormItem("", manage_partners_ = new JButton("Partners..."));
		this.addFormItem("", manage_liable_properties_ = new JButton("Liable Properties..."));
		manage_liable_properties_.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

			}
		});
		manage_partners_.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			}
		});
		this.updateForm();
	}

	protected void retrieveForm() {
		Agent a = dbo_;
		a.setTitleName(title_.getText());
		a.setFirstName(first_.getText());
		a.setMiddleName(middle_.getText());
		a.setLastName(last_.getText());
		a.setGender((Gender) gender_.getSelectedItem());
		a.setDOB(dob_.getDate());
		active_.retrieveForm();
		license_.retrieveForm();
		mls_.retrieveForm();
	}

	protected void updateForm() {
		Agent a = dbo_;
		if (a.getTitle() != null)
			title_.setText(a.getTitle());
		if (a.getFirstName() != null)
			first_.setText(a.getFirstName());
		if (a.getMiddleName() != null)
			middle_.setText(a.getMiddleName());
		if (a.getLastName() != null)
			last_.setText(a.getLastName());
		if (a.getGender() != null)
			gender_.setSelectedItem(a.getGender());
		if (a.getDOB() != null)
			dob_.setDate(a.getDOB());
		active_.updateForm();
		license_.updateForm();
		mls_.updateForm();
	}

	public static void main(String[] args) throws Exception {
		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		final JFrame f = new JFrame();
		Agent a = new Agent();
		a.setFirstName("Jonathan");
		a.setLastName("Lewis");
		a.setTitleName("Mr. ");
		a.setMiddleName("Andrew");
		a.setGender(Gender.MALE);
		a.setDOB(new Timestamp(System.currentTimeMillis()));
		a.setStartDate(new Timestamp(System.currentTimeMillis() - 1));
		a.setEndDate(new Timestamp(System.currentTimeMillis()));

		final AgentFormPanel afp = new AgentFormPanel("Agent", a, null, false);
		f.setLayout(new BorderLayout());
		f.add(afp, BorderLayout.CENTER);

		JPanel controls = new JPanel(new FlowLayout(FlowLayout.RIGHT));
		JButton ok = new JButton("OK");
		ok.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					afp.commit();
				} catch (Exception e1) {
					/* TODO: error notice */
				}
				f.dispose();
			}
		});

		JButton cancel = new JButton("Cancel");
		cancel.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					afp.cancel();
				} catch (Exception e1) {
					/*TODO: error notice */
				}
				f.dispose();
			}
		});

		JButton close = new JButton("Close");
		close.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				f.dispose();
			}
		});

		if (afp.isReadOnly()) {
			controls.add(close);
			f.getRootPane().setDefaultButton(close);
		} else {
			controls.add(ok);
			controls.add(cancel);
			f.getRootPane().setDefaultButton(ok);
		}

		f.add(controls, BorderLayout.SOUTH);
		f.pack();
		f.setVisible(true);

	}
}
